version: '3.8'

x-spring-healthcheck: &actuator-healthcheck
  healthcheck:
    test: "curl --fail --silent http://localhost:8080/actuator/health | grep UP || exit 1"
    retries: 5
    interval: 10s
    timeout: 5s

x-jre-image: &jre-image
  entrypoint: [ "java", "-jar", "/opt/root.jar" ]
  image: eclipse-temurin:17.0.3_7-jre

x-postgres-config: &postgres-config
  image: postgres:14.4-alpine
  environment:
    PGDATA: /var/lib/postgresql/data
  healthcheck:
    test: [ "CMD","pg_isready","-U","postgres" ]
    interval: 10s
    timeout: 5s
    retries: 3
  restart: unless-stopped

x-microservice-depends_on: &microservice-dependencies
  zipkin-server:
    condition: service_healthy
  config-server:
    condition: service_healthy
  eureka-server:
    condition: service_healthy

x-default-configserver: &config-client
  SPRING_PROFILES_ACTIVE: default,docker
  SPRING_CONFIG_IMPORT: "configserver:http://config-server:8080"

volumes:
  task_data:
  user_data:

services:

  config-server:
    <<: *jre-image
    <<: *actuator-healthcheck
    container_name: config-server
    depends_on:
      - zipkin-server
    volumes:
      - ./config-server/build/libs/config-server-1.0.1.jar:/opt/root.jar
    environment:
      SPRING_PROFILES_ACTIVE: default,docker
    restart: unless-stopped
    env_file:
      - github.env
      - encrypt.env
    ports:
      - "8888:8080"

  task-database:
    <<: *postgres-config
    container_name: task-database
    ports:
      - "4433:5432"
    environment:
      - POSTGRES_DB=task_db
      - POSTGRES_USER=taskadmin
      - POSTGRES_PASSWORD=taskadmsecret
    volumes:
      - task_data:/var/lib/postgresql/data

  user-database:
    <<: *postgres-config
    container_name: user-database
    ports:
      - "4434:5432"
    environment:
      - POSTGRES_DB=user_db
      - POSTGRES_USER=useradmin
      - POSTGRES_PASSWORD=useradmsecret
    volumes:
      - user_data:/var/lib/postgresql/data

  eureka-server:
    <<: *jre-image
    container_name: eureka-server
    volumes:
      - ./eureka-server/build/libs/eureka-server-1.0.1.jar:/opt/root.jar
    environment:
      SPRING_PROFILES_ACTIVE: native,docker
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8080"
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8761:8761"
    healthcheck:
      test: "curl --fail --silent http://localhost:8761/actuator/health | grep UP || exit 1"
      retries: 5
      interval: 10s
      timeout: 5s

  api-gateway:
    <<: *jre-image
    <<: *actuator-healthcheck
    container_name: api-gateway
    volumes:
      - ./api-gateway/build/libs/api-gateway-1.0.1.jar:/opt/root.jar
    depends_on:
      <<: *microservice-dependencies
    environment:
      <<: *config-client
    ports:
      - "8080:8080"

  keycloak-client:
    <<: *jre-image
    <<: *actuator-healthcheck
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 20s
    depends_on:
      <<: *microservice-dependencies
    #    container_name: keycloak-client
    volumes:
      - ./keycloak-client/build/libs/keycloak-client-1.0.1.jar:/opt/root.jar
    environment:
      <<: *config-client
    ports:
      - "6068-6069:8080"

  user-service:
    <<: *jre-image
    <<: *actuator-healthcheck
    depends_on:
      <<: *microservice-dependencies
      keycloak-client:
        condition: service_healthy
    volumes:
      - ./user-service/build/libs/user-service-1.0.1.jar:/opt/root.jar
    environment:
      <<: *config-client
    ports:
      - "6070-6071:8080"
    restart: on-failure

  task-service:
    <<: *jre-image
    <<: *actuator-healthcheck
    #    container_name: task-service
    volumes:
      - ./task-service/build/libs/task-service-1.0.1.jar:/opt/root.jar
    depends_on:
      <<: *microservice-dependencies
      user-service:
        condition: service_healthy
    environment:
      <<: *config-client
    ports:
      - "6072-6073:8080"
    restart: on-failure

  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin-server
    restart: unless-stopped
    expose:
      - '9411'
    ports:
      - '9411:9411'
